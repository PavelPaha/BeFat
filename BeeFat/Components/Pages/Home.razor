@page "/"

@inherits LayoutComponentBase
@using Microsoft.EntityFrameworkCore
@using Microsoft.Extensions.Configuration
@using Microsoft.Extensions.DependencyInjection
@using Microsoft.Extensions.Options
@using BeeFat.Data
@using BeeFat.Domain.Infrastructure
@using System.Globalization

@inject NavigationManager NavigationManager


@{
    var days = new Dictionary<int, string>()
    {
        { 1, "Понедельник" },
        { 2, "Вторник" },
        { 3, "Среда" },
        { 4, "Четверг" },
        { 5, "Пятница" },
        { 6, "Суббота" },
        { 0, "Воскресенье" }
    };

    
    var configuration = new ConfigurationBuilder()
        .AddJsonFile("appsettings.json")
        .Build();
    
    var options = new DbContextOptionsBuilder<ApplicationDbContext>()
        .UseNpgsql(configuration.GetConnectionString("DefaultConnection"))
        .Options;

    var edit = "/edit";
}

<PageTitle>Home</PageTitle>

<div class="container">
    <div class="home-sidebar">
        <h2>Имя трека</h2>
        <button @onclick="RedirectToTrackEditing">Редактировать трек</button>
        <ul>
            @* <li><MudButton ButtonType="ButtonType.Button" OnClick="RedirectToTrackEditing" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Cancel</MudButton></li> *@
            <li></li>
            <li><button>Изменить параметры тела</button></li>
            <li><button>Калибровка</button></li>
        </ul>
    </div>
    
    <div class="main-content">
        <div class="daily-plan">
            <h2>План питания на сегодня</h2>
            <ul class="daily-food-list product-list">
                <li>
                    <div>Название продукта</div>
                    <div>Масса</div>
                    <div>Белки</div>
                    <div>Жиры</div>
                    <div>Углеводы</div>
                    <div>Калории</div>
                    <div>Выполнено</div>
                </li>
                @{
                    var totalProteins = 0;
                    var totalFats = 0;
                    var totalCarbohydrates = 0;
                    var totalCalories = 0;
                    
                    var today = DayOfWeek.Tuesday;
                    using (var context = new FakeApplicationDbContext())
                    {
                        var todayDailyPlan = context.FoodProducts.Where(p => p.DayOfWeek.Equals(today));
                        foreach (var product in todayDailyPlan)
                        {
                            var foodFats = product.Food.Fats;
                            var foodProteins = product.Food.Proteins;
                            var foodCarbohydrates = product.Food.Carbohydrates;
                            var foodCalories = product.Food.Calories;
                            
                            totalFats += product.Food.Fats;
                            totalProteins += foodProteins;
                            totalCarbohydrates += foodCarbohydrates;
                            totalCalories += foodCalories;
                            
                            <li>
                                <div>@product.Name</div>
                                <div><span class="portion-size">@String.Format("{0} {1}", product.PortionSize, (product is FoodProductGram) ? "г" : "шт")</span></div>
                                <div><span class="portion-size">@foodProteins г</span></div>
                                <div><span class="portion-size">@foodFats г</span></div>
                                <div><span class="portion-size">@foodCarbohydrates г</span></div>
                                <div><span class="portion-size">@foodCalories ккал</span></div>
                                <div><button type="button" class="checkbox-button">&#10003;</button></div>
                            </li>
                        }
                    }
                }
            </ul>
            <div class="total">
                Итого: <span class="parameter">@totalProteins г</span> белков, <span class="parameter">@totalFats г</span> жиров, <span class="parameter">@totalCarbohydrates г</span> углеводов, <span class="parameter">@totalCalories</span> калорий.
            </div>
        </div>
        <div class="next-days-plan product-list">
            <h3>План питания на следующие дни</h3>
            <ul class="product-list">
                @{
                    using (var context = new FakeApplicationDbContext())
                    {
                        var todayNumber = (int)today;
                        for (int dayNumber = todayNumber + 1; dayNumber <= 6 && dayNumber < todayNumber + 3; dayNumber++)
                        {
                            var products = context.FoodProducts.Where(p => (int)p.DayOfWeek == dayNumber);
                            if (!products.Any()) break;
                            <li>
                                <div class="product">
                                    @{
                                        <span class="product-name">
                                            @{
                                                <span>@days[dayNumber]: </span>
                                                var takenProducts = products.Take(4).ToList();
                                                for (var i = 0; i < takenProducts.Count; i++)
                                                {
                                                    var product = takenProducts[i];
                                                    @product.Name;
                                                    if (i != takenProducts.Count - 1)
                                                    {
                                                        <span>, </span>
                                                    }
                                                }

                                                if (products.Count() > 4)
                                                {
                                                    <span>...</span>
                                                }
                                            }
                                        </span>
                                    }
                                </div>
                            </li>
                        }
                    }
                }
            </ul>
        </div>
    </div>
    
    <div class="home-sidebar">
        <div class="user-info">
            <img src="avatar.jpg">
            <span class="username">@{
                                       using (var context = new ApplicationDbContext(options, configuration))
                                       {
                                           var user = context.BeeFatUsers.FirstOrDefault();
                                           @user.UserName.ToString()
                                       }
                                   }</span>
        </div>
        <div class="parameters">
            <h3>Параметры</h3>
            <p>Масса: <span class="parameter">xxx кг</span></p>
            <p>Рост: <span class="parameter">xxx см</span></p>
            <p>Желаемые калории: <span class="parameter">xxx ккал</span></p>
        </div>
    </div>
</div>

@code {
    public void RedirectToTrackEditing()
    {
        NavigationManager.NavigateTo("/edit", forceLoad: true);
        throw new Exception();
    }
}