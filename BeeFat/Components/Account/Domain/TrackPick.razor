@page "/track/pick"

@inherits LayoutComponentBase

@using Blazorise
@using BeeFat.Domain.Infrastructure
@using BeeFat.Components.Account.Domain.Helpers
@using BeeFat.Data
@using Microsoft.AspNetCore.Authorization

@inject TrackPickHelper TrackPickHelper
@inject NavigationManager NavigationManager
@inject IdentityUserAccessor UserAccessor

@attribute [Authorize]

@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<Blazorise.Modal @ref="TrackPickHelper.MyModal" Title="Modal title" Class="popup_window">
    <div>
        @if (TrackPickHelper.SelectedTrack is not null)
        {
            <div>Вы уверены, что хотите поменять трек @user.Track.Name на @TrackPickHelper.SelectedTrack.Name ?</div>
            <Blazorise.Button Style="background-color: #c2cb88;" @onclick="() => { TrackPickHelper.Save(user); TrackPickHelper.MyModal.Close(CloseReason.UserClosing); }">Да</Blazorise.Button>
        }
    </div>
</Blazorise.Modal>


<div class="container">
    <div class="home-sidebar">
        <h2>Текущий трек - @user.Track.Name</h2>
    </div>

    <div class="main-content">
        <div class="daily-plan">
            <h2>Доступные треки</h2>
            <input type="text" value="@searchValue" @oninput="OnSearchValueChanged"/>
            <div>
                @{
                    foreach (var currentTrack in tracks)
                    {
                        var url = $"/tracks/{currentTrack.Name}/view";
                        <div>
                            <button class="select-track" @onclick="() => { NavigationManager.RedirectTo(url); }">@currentTrack.Name</button>
                            @{
                                if (TrackPickHelper.RecommendentTracks.Contains(currentTrack.Id))
                                {
                                    <span>Этот трек рекомендован для Вас.</span>
                                }
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>

    <div class="home-sidebar">
        <div class="user">
            <div class="user-info">
                <img src="avatar.jpg">
                <span class="username">@user.PersonName.FirstName @user.PersonName.LastName</span>
            </div>
            <button class="action-button">Выйти</button>
        </div>
        <div class="parameters">
            <h3>Параметры</h3>
            <p>Масса: <span class="parameter">@user.Weight кг</span></p>
            <p>Рост: <span class="parameter">@user.Height см</span></p>
        </div>
    </div>
</div>

@code {

    private string searchValue = "";
    private IEnumerable<Track> tracks = default!;
    private ApplicationUser user = default!;

    [CascadingParameter] private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        tracks = TrackPickHelper.SearchTrack(user, "");
    }

    private void OnSearchValueChanged(ChangeEventArgs e)
    {
        tracks = TrackPickHelper.SearchTrack(user, e.Value.ToString());
        StateHasChanged();
    }

}